{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAoEA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAEzB,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACHH,EAEAF,EAAQ,UAACH,QAAUC,IAGnBG,EAAO,UAACJ,QAAUC,MAEvBA,OA/EE,CACTQ,KAAMC,SAASC,cAAc,WAI5BF,KAAKG,iBAAiB,UAe3B,SAAsBC,GAClBA,EAAMC,iBAEN,MAAMC,EAAW,GAEG,IAAIC,SAASH,EAAMI,eAG3BC,SAAQ,CAACC,EAAOC,KACxBL,EAASK,GAAQD,KAErBE,QAAQC,IAAIP,GAIuB,IAA/BQ,EAAQC,OAAOT,EAASd,OAC5B,MAAMwB,EAASD,OAAOT,EAASU,QACzBC,EAAOF,OAAOT,EAASW,MAGzB,IAAC,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAMb5B,EAJF4B,EAAE,EAICJ,GAAOK,MAAK,EAhDxC5B,SAgD2CA,EAhD3CC,MAgDqDA,MAE/CJ,EAAAgC,OAAKC,QAAQ,uBAAqB9B,QAAiBC,UAEtD8B,OAAM,EApDT/B,SAoDYA,EApDZC,MAoDsBA,MAEhBJ,EAAAgC,OAAKG,QAAQ,sBAAoBhC,QAAiBC,UAK7CsB,GAASG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n    form: document.querySelector('.form'),\n}\n\n\nrefs.form.addEventListener('submit', onFormSubmit);\n////delay\n////step - delay+=step on every iteration\n/////amount - (of iterations)\n////position - number of iertation (from 1)\n\n///1-2-3\n//get input from formData\n//iteration amount times\n//make promise\n//increase delay on+step\n//notiflix\n\n  ////Functions\n\nfunction onFormSubmit(event) {\n    event.preventDefault();\n\n    const formData = {};\n\n    const formDataRaw = new FormData(event.currentTarget);\n\n    ///перебір масиву формдати і додавання елементів в об'єкт\n    formDataRaw.forEach((value, name) => {\n        formData[name] = value;\n    })\n    console.log(formData);\n\n\n    ///приведення інпуту до числового значення\n    let delay = Number(formData.delay);\n    const amount = Number(formData.amount);\n    const step = Number(formData.step);\n\n    ////Цикл\n    for (let i = 0; i < amount; i += 1) {\n        ///встановлення позиції по-порядку від одиниці, а не від 0\n        const position = i+1;\n\n\n            ////виклик функції з промісами\n    createPromise(position, delay).then(({ position, delay }) => {\n    // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n        \n        \n        ///збільшення затримки на крок степ після виконання функції\n           delay += step;\n        \n    }\n \n}\n\n\n\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n\n        const shouldResolve = Math.random() > 0.3;\n        \n        setTimeout(() => {\n            if (shouldResolve) {\n                // Fulfill\n                resolve({position, delay});\n            } else {\n                // Reject\n                reject({position, delay});\n            }\n        }, delay);\n        \n    });\n\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","event","preventDefault","formData","FormData","currentTarget","forEach","value","name","console","log","delay1","Number","amount","step","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.03081973.js.map"}